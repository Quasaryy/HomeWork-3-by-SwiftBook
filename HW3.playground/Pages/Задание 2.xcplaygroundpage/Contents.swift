
import Foundation

/*:
 ## Упражнение - опциональные значения
 
 >Во время выполнения упражнений данного плейграунда, вы будете выводить в консоль опциональные значения.  Компилятор Swift выдаст предупреждение: «Expression implicitly coerced from `Int?` to Any».  Для целей выполнения заданий, можете данные предупреждения игнорировать.
 
 Ваше приложение запрашивает пользователя его возраст.  Введённые пользователем данные передаются вам в виде текста, `String`.  Однако, вам нужно сохранить значение в виде целого числа `Int`.  Пользователь может сделать ошибку и ввести неверные данные.
 
 Объявите переменную `userInputAge` типа `String` и присвойте ей значение "34e" для моделирования опечатки.  Затем определите константу `userAge` типа `Int` и используйте конструктор `Int` для преобразования `userInputAge`.  Какую ошибку вы получаете?
 */

var userInputAge: String = "34e"
let userAge = Int(userInputAge)
print(userAge)
// Error: Expression implicitly coerced from Int? to Any

/*:
 Теперь поменяйте тип `userAge` на `Int?`, и напечатайте значение `userAge`.  Почему значение `userAge` равно `nil`?  Ответьте в комментарии или внутри команды print.
 */

var userInputAge2: String = "34e"
let userAge2: Int? = Int(userInputAge2)
print("userAge содержит \(userAge) так как невозможно преобразовать строковое значение 34e в Int")

/*:
 Теперь исправьте опечатку в значении `userInputAge`.  Что-нибудь в результатах вывода кажется вам неуместным?
 
 Напечатайте `userAge` снова, но теперь извлеките `userAge` с помощью оператора «!».
 */

var userInputAge3: String = "34"
//let userAge3: Int? = Int(userInputAge3!)
// Ошибка так как невозможно извлечь опционал из неопционального значения userInputAge3
/*:
 Используйте привязку опционалов для извлечения `userAge`.  Если `userAge` содержит значение, выведите его в консоль.
 */

var userInputAge4: String = "34"
let userAge4: Int? = Int(userInputAge4)

if let newUserAge = userAge4 {
    print("newUserAge содержит \(newUserAge)")
}

/*:
 Теперь снова эмулируйте опечатку и попробуйте вывести на консоль целочисленное значение переменной `userInputAge`, при помощи оператора "!". Какую ошибку вы получите? Почему?
 */

var userInputAge5: String = "34e"
//let newUserAge = Int(userInputAge5!)

// Ошибка так как невозможно извлечь опционал из неопционального значения userInputAge5

//: [Ранее: Задание 1](@previous)  |  задание 2 из 6  |  [Далее: Задание 3](@next)
